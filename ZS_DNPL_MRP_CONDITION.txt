REPORT zs_dnpl_mrp_condition
       NO STANDARD PAGE HEADING
       LINE-SIZE  100
       LINE-COUNT 65.

************************************************************************
* This program uploads conditon for DNPL and MRP in VK11 Transaction   *
************************************************************************
*                         CHANGE HISTORY                               *
*----------------------------------------------------------------------*
* Version# | Date     | Changed by | Description                       *
*----------+----------+------------+-----------------------------------*
*          | 25.02.2008 | Vikram.S      | Initial program             *
************************************************************************
TABLES : mara,mvke.
*Type-pools
TYPE-POOLS : truxs.
* include program for common routines for interface programs
DATA: zzret_code LIKE sy-subrc,
      v_open.
DATA: it_raw TYPE truxs_t_text_data.
DATA: BEGIN OF tot,
        read               TYPE i,
        ok                 TYPE i,
        err                TYPE i,
      END OF tot.
* format of the input file
DATA : BEGIN OF t_indata OCCURS 0,
        vkorg  LIKE komg-vkorg,  "Sales Organization
        vtweg  LIKE komg-vtweg,  "Division
        matnr  LIKE mara-matnr,  "Material
        kschl  LIKE rv13a-kschl,
        kbetr  LIKE konp-kbetr,
        valfr  LIKE rv13a-datab,
        valto  LIKE rv13a-datbi,
       END OF t_indata.

*Format for Download file
DATA : BEGIN OF t_err OCCURS 0,
        vkorg(30) TYPE c,  "Sales Organization
        vtweg(20)  TYPE c,  "Division
        matnr(18)  TYPE c,  "Material
        kschl(25)  TYPE c,
        kbetr(15)  TYPE c,
        valfr(20)  TYPE c,
        valto(20)  TYPE c,
        desc       TYPE string, " Description
       END OF t_err.
*Message tab for BDC
DATA:  messtab LIKE bdcmsgcoll OCCURS 0 WITH HEADER LINE.
DATA : w_intial LIKE t_err.
*Final internal table for Download
*DATA : t_fdown LIKE w_intial OCCURS 0 WITH HEADER LINE.
DATA :g_mess TYPE string.
DATA : g_datefr(10)  TYPE c,
       g_dateto(10)  TYPE c,
       g_kbetr(13)   TYPE c.
*include bdcrecx1.
INCLUDE zbdcincl.

*----------------------------------------------------------------------*
*  Selection Screen                                                    *
*----------------------------------------------------------------------*

SELECTION-SCREEN : BEGIN OF BLOCK 001 WITH FRAME TITLE text-001.
PARAMETERS: p_upl       LIKE rlgrap-filename MODIF ID a           "Upload File
                         DEFAULT 'c:\temp\parbcust.xls' OBLIGATORY,
            p_head      AS CHECKBOX MODIF ID a,                   "Header Line
            p_test      AS CHECKBOX MODIF ID a,     " test run? X or Y for yes
            p_sess(12)  TYPE  c  MODIF ID a,                      "Session name
            p_mode      MODIF ID a.                               "Mode for BDC
PARAMETERS: p_rest      LIKE rlgrap-filename MODIF ID a           "Dwonload File Path
                         DEFAULT 'c:\temp\Success.xls' OBLIGATORY.
SELECTION-SCREEN : END OF BLOCK 001.

*----------------------------------------------------------------------*
* At Selection-screen                                                  *
*----------------------------------------------------------------------*
*Get File name for Upload
AT SELECTION-SCREEN ON VALUE-REQUEST FOR p_upl.
  CALL FUNCTION 'WS_FILENAME_GET'
    IMPORTING
      filename         = p_upl
    EXCEPTIONS
      inv_winsys       = 1
      no_batch         = 2
      selection_cancel = 3
      selection_error  = 4
      OTHERS           = 5.

*Get File name for download in download radio Button
AT SELECTION-SCREEN ON VALUE-REQUEST FOR p_rest.
  CALL FUNCTION 'WS_FILENAME_GET'
    IMPORTING
      filename         = p_rest
    EXCEPTIONS
      inv_winsys       = 1
      no_batch         = 2
      selection_cancel = 3
      selection_error  = 4
      OTHERS           = 5.


START-OF-SELECTION.

  TRANSLATE p_upl TO LOWER CASE.
*Upload to internal table
  PERFORM upload_file USING p_upl.

*If no records in Internal table
  IF t_indata[] IS INITIAL .
    WRITE: / 'No records were uploaded'.
    ULINE.
    EXIT.
  ENDIF.

*Validate Fields before uploading
  PERFORM valaidate_fields.

*Adding the intial line of the xls.
  PERFORM intial_line.
  LOOP AT t_indata.
    CLEAR :messtab,
           messtab[],
           g_datefr,
           g_dateto,
           g_kbetr,
           t_err.
*perform open_group.

    PERFORM bdc_dynpro      USING 'SAPMV13A'                   '0100'.
    PERFORM bdc_field       USING 'BDC_CURSOR'                 'RV13A-KSCHL'.
    PERFORM bdc_field       USING 'BDC_OKCODE'                 '/00'.
    PERFORM bdc_field       USING 'RV13A-KSCHL'                t_indata-kschl.
    TRANSLATE t_indata-kschl TO UPPER CASE.
    IF t_indata-kschl = 'ZM70'.

      PERFORM bdc_dynpro      USING 'SAPMV13A'                 '1716'.
      PERFORM bdc_field       USING 'BDC_CURSOR'               'RV13A-DATBI(01)'.
      PERFORM bdc_field       USING 'BDC_OKCODE'               '/00'.
      PERFORM bdc_field       USING 'KOMG-VKORG'               t_indata-vkorg.
      PERFORM bdc_field       USING 'KOMG-VTWEG'               t_indata-vtweg.
      PERFORM bdc_field       USING 'KOMG-MATNR(01)'           t_indata-matnr.
      g_kbetr = t_indata-kbetr.
      CONDENSE g_kbetr NO-GAPS.
      PERFORM bdc_field       USING 'KONP-KBETR(01)'           g_kbetr.

      CONCATENATE t_indata-valfr+6(2)
                  '.'
                  t_indata-valfr+4(2)
                  '.'
                  t_indata-valfr+0(4)
                 INTO g_datefr.

      PERFORM bdc_field       USING 'RV13A-DATAB(01)'          g_datefr.
      CONCATENATE t_indata-valto+6(2)
                  '.'
                  t_indata-valto+4(2)
                  '.'
                  t_indata-valto+0(4)
                 INTO g_dateto.
      PERFORM bdc_field       USING 'RV13A-DATBI(01)'          g_dateto.

      PERFORM bdc_dynpro      USING 'SAPMV13A'                 '1716'.
      PERFORM bdc_field       USING 'BDC_CURSOR'               'KOMG-MATNR(01)'.
      PERFORM bdc_field       USING 'BDC_OKCODE'               '=SICH'.
    ELSE.
      PERFORM bdc_dynpro      USING 'SAPLV14A'                 '0100'.
      PERFORM bdc_field       USING 'BDC_CURSOR'               'RV130-SELKZ(03)'.
      PERFORM bdc_field       USING 'BDC_OKCODE'               '=WEIT'.
      PERFORM bdc_field       USING 'RV130-SELKZ(01)'          ''.
      PERFORM bdc_field       USING 'RV130-SELKZ(04)'          'X'.

      PERFORM bdc_dynpro      USING 'SAPMV13A'                 '1603'.
      PERFORM bdc_field       USING 'BDC_CURSOR'               'KONP-KBETR(01)'.
      PERFORM bdc_field       USING 'BDC_OKCODE'               '/00'.
      PERFORM bdc_field       USING 'KOMG-VKORG'               t_indata-vkorg.
      PERFORM bdc_field       USING 'KOMG-VTWEG'               t_indata-vtweg.
      PERFORM bdc_field       USING 'KOMG-MATNR(01)'           t_indata-matnr.
      g_kbetr = t_indata-kbetr.
      CONDENSE g_kbetr NO-GAPS.
      PERFORM bdc_field       USING 'KONP-KBETR(01)'           g_kbetr.

      CONCATENATE t_indata-valfr+6(2)
                  '.'
                  t_indata-valfr+4(2)
                  '.'
                  t_indata-valfr+0(4)
                 INTO g_datefr.

      PERFORM bdc_field       USING 'RV13A-DATAB(01)'          g_datefr.

      CONCATENATE t_indata-valto+6(2)
                  '.'
                  t_indata-valto+4(2)
                  '.'
                  t_indata-valto+0(4)
                 INTO g_dateto.
      PERFORM bdc_field       USING 'RV13A-DATBI(01)'          g_dateto.

      PERFORM bdc_dynpro      USING 'SAPMV13A'                 '1603'.
      PERFORM bdc_field       USING 'BDC_CURSOR'               'KOMG-MATNR(01)'.
      PERFORM bdc_field       USING 'BDC_OKCODE'               '=SICH'.
    ENDIF.
    CALL TRANSACTION 'VK11' USING bdcdata MODE p_mode MESSAGES INTO messtab.

    IF sy-subrc NE 0.
      zzret_code = sy-subrc.
*If error in upload move to session
      IF v_open NE 'X'.
        v_open = 'X'.
        PERFORM bdc_open_group USING p_sess.
      ENDIF.
      PERFORM bdc_insert USING 'XD01'.
    ELSE.
      zzret_code = 0.
    ENDIF.

    READ TABLE messtab WITH  KEY msgtyp = 'E'.
    IF sy-subrc =  0.
      ADD 1 TO tot-err.
*Error File
      MOVE-CORRESPONDING t_indata TO t_err .
*Get the Error details
      PERFORM format_message.
      APPEND t_err.
    ELSE.
      COMMIT WORK AND WAIT.
*    ADD 1 TO tot-ok.
**Success Message
*    MOVE-CORRESPONDING t_indata TO t_err.
**    READ TABLE messtab WITH  KEY msgtyp = 'S'.
**    CONCATENATE messtab-msgv1 messtab-msgv2 messtab-msgv3 messtab-msgv4
**               INTO t_err-desc .
***    READ TABLE messtab WITH  KEY msgtyp = 'S'.
***    t_err-kunnr = messtab-msgv1.
*
*    APPEND t_err.
    ENDIF.
    REFRESH bdcdata.
  ENDLOOP.

  IF v_open = 'X'.
    PERFORM bdc_close_group USING p_sess.
  ENDIF.

  WRITE: /01      text-001 ,
          30        ':',
          31      sy-repid,
*          92      text-001,
          92      sy-pagno,
         /01      text-003,
          10      'by',
          30      ':',
          31      sy-uname,
          82      sy-datum DD/MM/YY,
          92      sy-uzeit.

  ULINE.
  SKIP 1.
  IF t_err[] IS NOT INITIAL.
    WRITE: /01     text-005,
            25     p_rest.
*         /01     text-006,
*          20     batch_name.
    ULINE.
    SKIP 2.
  ENDIF.
  tot-ok = tot-read - tot-err.
  WRITE: / 'TOTAL INPUT RECORDS READ',   28 tot-read.
  WRITE: / 'TOTAL CUSTOMERS CREATED',    28 tot-ok.
  WRITE: / 'TOTAL CUSTOMERS IN ERROR',   28 tot-err.

  IF t_err[] IS NOT INITIAL.
*Download error  files
    PERFORM download_result.
  ENDIF.


*perform close_group.

*&---------------------------------------------------------------------*
*&      Form  UPLOAD_FILE
*&---------------------------------------------------------------------*
*       Uploads the file from the workstation using the standard SAP
*       function module WS_UPLOAD.
*----------------------------------------------------------------------*
FORM upload_file USING infile.

  CALL FUNCTION 'TEXT_CONVERT_XLS_TO_SAP'
    EXPORTING
*   I_FIELD_SEPERATOR          = ','
     i_line_header              = p_head
      i_tab_raw_data             = it_raw
      i_filename                 = p_upl
    TABLES
      i_tab_converted_data       = t_indata
   EXCEPTIONS
     conversion_failed          = 1
     OTHERS                     = 2
            .

  IF sy-subrc <> 0.
* MESSAGE ID SY-MSGID TYPE SY-MSGTY NUMBER SY-MSGNO
*         WITH SY-MSGV1 SY-MSGV2 SY-MSGV3 SY-MSGV4.
  ENDIF.

ENDFORM.                               " UPLOAD_FILE
*&---------------------------------------------------------------------*
*&      Form  VALAIDATE_FIELDS
*&---------------------------------------------------------------------*
*       Validate Fields befor uploading
*----------------------------------------------------------------------*
FORM valaidate_fields .
  DATA : v_matnr(18)  TYPE n,
         v_vkorg(4)   TYPE n,
         v_vtweg(2)   TYPE n.
  LOOP AT  t_indata.
    CLEAR : t_err.
    ADD 1 TO tot-read.
    IF t_indata-matnr CO '1234567890 '.
      v_matnr = t_indata-matnr.
      t_indata-matnr = v_matnr.
      MODIFY t_indata.
    ENDIF.
    IF t_indata-vkorg CO '1234567890 '.
      v_vkorg = t_indata-vkorg.
      t_indata-vkorg = v_vkorg.
      MODIFY t_indata.
    ENDIF.
    IF t_indata-vtweg CO '1234567890 '.
      v_vtweg = t_indata-vtweg.
      t_indata-vtweg = v_vtweg.
      MODIFY t_indata.
    ENDIF.
    SELECT SINGLE matnr FROM mara
                        INTO mara
                       WHERE matnr = t_indata-matnr.

    IF sy-subrc NE 0.
      ADD 1 TO tot-err.
      MOVE-CORRESPONDING t_indata TO t_err .
      t_err-desc = 'Material does not Exist in the SAP system'.
      APPEND t_err.
      DELETE t_indata.
      CONTINUE.
    ENDIF.

    SELECT SINGLE matnr FROM mvke
                        INTO mvke
                       WHERE matnr = t_indata-matnr
                       AND   vkorg = t_indata-vkorg
                       AND   vtweg = t_indata-vtweg.

    IF sy-subrc NE 0.
      ADD 1 TO tot-err.
      MOVE-CORRESPONDING t_indata TO t_err .
      t_err-desc = 'Material does not Exist in the Sales organisation'.
      APPEND t_err.
      DELETE t_indata.
      CONTINUE.
    ENDIF.
  ENDLOOP.

ENDFORM.                    " VALAIDATE_FIELDS

*&---------------------------------------------------------------------*
*&      Form  FORMAT_MESSAGE
*&---------------------------------------------------------------------*
*       Get the Error details
*----------------------------------------------------------------------*
FORM format_message .
  LOOP AT messtab WHERE msgtyp = 'E'.
    CALL FUNCTION 'FORMAT_MESSAGE'
      EXPORTING
        id        = messtab-msgid
        lang      = 'EN'
        no        = messtab-msgnr
        v1        = messtab-msgv1
        v2        = messtab-msgv2
        v3        = messtab-msgv3
        v4        = messtab-msgv4
      IMPORTING
        msg       = g_mess
      EXCEPTIONS
        not_found = 1
        OTHERS    = 2.
    IF sy-subrc <> 0.
* MESSAGE ID SY-MSGID TYPE SY-MSGTY NUMBER SY-MSGNO
*         WITH SY-MSGV1 SY-MSGV2 SY-MSGV3 SY-MSGV4.
    ENDIF.

    CONCATENATE t_err-desc
                g_mess
                ','
                INTO t_err-desc SEPARATED BY space.
  ENDLOOP.
ENDFORM.                    " FORMAT_MESSAGE
*&---------------------------------------------------------------------*
*&      Form  DOWNLOAD_RESULT
*&---------------------------------------------------------------------*
*       Download error and Success files
*----------------------------------------------------------------------*
FORM download_result .
  DATA : f_string TYPE string.
  f_string = p_rest.

  INSERT w_intial INTO t_err INDEX 1.
  CALL FUNCTION 'GUI_DOWNLOAD'
    EXPORTING
*    BIN_FILESIZE                    =
      filename                        = f_string
     filetype                        = 'ASC'
*    APPEND                          = ' '
     write_field_separator           = 'X'
    TABLES
      data_tab                        = t_err[]
*    FIELDNAMES                      =
   EXCEPTIONS
     file_write_error                = 1
     no_batch                        = 2
     gui_refuse_filetransfer         = 3
     invalid_type                    = 4
     no_authority                    = 5
     unknown_error                   = 6
     header_not_allowed              = 7
     separator_not_allowed           = 8
     filesize_not_allowed            = 9
     header_too_long                 = 10
     dp_error_create                 = 11
     dp_error_send                   = 12
     dp_error_write                  = 13
     unknown_dp_error                = 14
     access_denied                   = 15
     dp_out_of_memory                = 16
     disk_full                       = 17
     dp_timeout                      = 18
     file_not_found                  = 19
     dataprovider_exception          = 20
     control_flush_error             = 21
     OTHERS                          = 22
            .
  IF sy-subrc <> 0.
* MESSAGE ID SY-MSGID TYPE SY-MSGTY NUMBER SY-MSGNO
*         WITH SY-MSGV1 SY-MSGV2 SY-MSGV3 SY-MSGV4.
  ENDIF.

ENDFORM.                    " DOWNLOAD_RESULT
*&---------------------------------------------------------------------*
*&      Form  INTIAL_LINE
*&---------------------------------------------------------------------*
*       Adding the intial line of the xls
*----------------------------------------------------------------------*
FORM intial_line .
  w_intial-vkorg   = 'Sales organization'.
  w_intial-vtweg   = 'Dist. Ch'.
  w_intial-matnr   = 'Material'.
  w_intial-kschl   = 'Condition Type'.
  w_intial-kbetr   = 'Amount'.
  w_intial-valfr   = 'Valid From'.
  w_intial-valto   = 'Valid To'.
  w_intial-desc    = 'Description'.

ENDFORM.                    " INTIAL_LINE
