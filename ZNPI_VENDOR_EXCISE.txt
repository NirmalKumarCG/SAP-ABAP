*************************************************************************
**Report Name: ZNPI_VENDOR_EXCISE                                       *
**Consultant : Sathish Kumar.S                                          *
**Author     : Sathish Kumar.S                                          *
**Date       : 31.12.2008                                               *
**Description: Program creates an Batch Input Session for upload of   *
*              Vendor excise details via transaction J1ID.            *
**----------------------------------------------------------------------*
REPORT znpi_vendor_excise
       NO STANDARD PAGE HEADING LINE-SIZE 255.

TABLES: J_1IMOvend.     "Vendor Master Excise Additional Data
*----------------------------------------------------------------------*
* Type-pools
*----------------------------------------------------------------------*
TYPE-POOLS : truxs.
*include bdcrecx1.
* include programs for common processes in interface programs
DATA  zzret_code LIKE sy-subrc.
INCLUDE zbdcincl.
*----------------------------------------------------------------------*
* Selection Screen
*----------------------------------------------------------------------*
SELECTION-SCREEN : BEGIN OF BLOCK 001 WITH FRAME TITLE text-001.
PARAMETERS: p_upl       LIKE rlgrap-filename DEFAULT 'c:\temp\venexcise.xls',
            p_hed       AS CHECKBOX DEFAULT 'X',     " With header line? X or Y for yes
            p_test      AS CHECKBOX,                 " test run? X or Y for yes
            p_sess(12)  TYPE c,
            p_mode.
PARAMETERS: p_rest      LIKE rlgrap-filename  DEFAULT 'c:\temp\Result.xls'.
SELECTION-SCREEN : END OF BLOCK 001.

*----------------------------------------------------------------------*
* Data Declaration
*----------------------------------------------------------------------*
* input file format for Vendor Excise Maintainance
DATA: BEGIN OF t_indata OCCURS 0,
*       s_no(5) TYPE n,                         "line number
       altkn      LIKE lfb1-altkn,             "Previous Master Record Number
       lifnr      LIKE lfb1-lifnr,             "Account Number of Vendor or Creditor
       j_1iexcd   LIKE j_1imovend-j_1iexcd,    "ECC Number
       J_1IEXRN   LIKE j_1imovend-J_1IEXRN,     "Excise Registration Number
       j_1iexrg   LIKE j_1imovend-j_1iexrg,    "Excise Range
       j_1iexdi   LIKE j_1imovend-j_1iexdi,    "Excise Division
       j_1iexco   LIKE j_1imovend-j_1iexco,    "Excise Commissionerate
       j_1icstno  LIKE j_1imovend-j_1icstno,   "Central Sales Tax Number
       j_1ilstno  LIKE j_1imovend-j_1ilstno,   "Local Sales Tax Number
       j_1ipanno  LIKE j_1imovend-j_1ipanno,   "Permanent Account Number
       j_1iexcive LIKE j_1imovend-j_1iexcive,  "Excise tax indicator for vendor
       J_1ISSIST  LIKE j_1imovend-J_1ISSIST,   "SSI Status
       J_1IVTYP    LIKE j_1imovend-J_1IVTYP,    "Type of Vendor
       J_1IVENCRE  LIKE j_1imovend-J_1IVENCRE,  "CENVAT Scheme Participant
       aedat      LIKE j_1imovend-aedat,       "Changed On
       usnam      LIKE j_1imovend-usnam,       "Changed by the user
      END OF t_indata.

*Output file format for Vendor Excise Maintainance
DATA: BEGIN OF t_outdata OCCURS 0.
      INCLUDE STRUCTURE t_indata.
DATA: desc type string,            "Description for error fields
      sort,
      end of t_outdata.

*Output file format for Vendor Excise Maintainance with header line
DATA: BEGIN OF t_rest OCCURS 0,
*       s_no(7),                                "line number
       altkn(10),                              "Previous Master Record Number
       lifnr(10),                              "Account Number of Vendor or Creditor
       j_1iexcd(40),                           "ECC Number
       J_1IEXRN(40),                           "Excise Registration Number
       j_1iexrg(60),                           "Excise Range
       j_1iexdi(60),                           "Excise Division
       j_1iexco(60),                           "Excise Commissionerate
       j_1icstno(40),                          "Central Sales Tax Number
       j_1ilstno(40),                          "Local Sales Tax Number
       j_1ipanno(40),                          "Permanent Account Number
       j_1iexcive(30),                         "Excise tax indicator for vendor
       J_1ISSIST(10),                          "SSI Status
       J_1IVTYP(14),                           "Type of Vendor
       J_1IVENCRE(6),                          "CENVAT Scheme Participant
       aedat(10),                              "Changed On
       usnam(12),                              "Changed by the user
       desc type string,
      END OF t_rest.

DATA: it_raw  TYPE truxs_t_text_data.

DATA:  w_upllen            TYPE i VALUE 2000,
       err_msg(100)        TYPE c,
       sap_venno           LIKE lfa1-lifnr,
       batch_name(30)      TYPE c,
       v_open.

* Constants
CONSTANTS: c_trans(4)    VALUE 'J1ID', " transaction used
           delimiter(1)  VALUE ','.
DATA:  messtab LIKE bdcmsgcoll OCCURS 0 WITH HEADER LINE.

*To store how much datas have read
DATA: BEGIN OF tot,
        ok                 TYPE i,
        read               TYPE i,
        err                TYPE i,
      END OF tot.
DATA : g_init TYPE i,
       g_mess TYPE string,
       v_flag TYPE c.

data : g_date(10)  TYPE c.

*----------------------------------------------------------------------*
* At Selection-Screen for upload and download file
*----------------------------------------------------------------------*
AT SELECTION-SCREEN ON VALUE-REQUEST FOR p_upl.
*To get file name for upload file at selection screen
  CALL FUNCTION 'F4_FILENAME'
    IMPORTING
      file_name = p_upl.

AT SELECTION-SCREEN ON VALUE-REQUEST FOR p_rest.
*To get file name for upload file at selection screen
  CALL FUNCTION 'F4_FILENAME'
    IMPORTING
      file_name = p_rest.

*----------------------------------------------------------------------*
*  Start Of Selection
*----------------------------------------------------------------------*
START-OF-SELECTION.
IF p_upl IS INITIAL.
      MESSAGE 'Please Fill the Upload File Path' TYPE 'S' DISPLAY LIKE 'E'.
      EXIT.
    ENDIF.
*Validating Download File Path
    IF p_rest IS INITIAL.
      MESSAGE 'Please Fill the Download File Path' TYPE 'S' DISPLAY LIKE 'E'.
      EXIT.
    ENDIF.
  IF p_sess IS INITIAL.
    MESSAGE 'Please Fill the BDC Session Name' TYPE 'S' DISPLAY LIKE 'E'.
    EXIT.
  ENDIF.

  IF p_mode IS INITIAL.
    MESSAGE 'Please Fill the BDC Session Mode' TYPE 'S' DISPLAY LIKE 'E'.
    EXIT.
  ENDIF.
*To upload input File
  PERFORM 100_upload_file.
  IF t_indata[] IS INITIAL.
    WRITE: / 'No records were uploaded.'.
    ULINE.
  ENDIF.
*Validation of Fields before uploading
  PERFORM field_validation.
  IF p_test IS INITIAL.
    if not t_indata[] is initial.
      PERFORM create_vendor_excise.
    endif.
  else.
    PERFORM test_only_result.
  ENDIF.

*----------------------------------------------------------------------*
*  End Of Selection
*----------------------------------------------------------------------*
END-OF-SELECTION.
IF NOT t_outdata[] IS INITIAL.
*To Download error file.
  PERFORM success_error_download.
ENDIF.
   WRITE: /01      text-001 ,
            27        ':',
            28      sy-repid,
*          92      text-001,
            92      sy-pagno,
           /01      text-002,
            10      'by',
            27      ':',
            28      sy-uname,
            82      sy-datum DD/MM/YY,
            92      sy-uzeit.

    ULINE.
    SKIP 1.
    WRITE: /01     text-003,
            25     p_rest.
*         /01     text-006,
*          20     batch_name.
    ULINE.
    SKIP 2.
    WRITE: / 'TOTAL INPUT RECORDS READ',   35 tot-read.
    IF p_test IS INITIAL.
      tot-ok = tot-read - tot-err.
      WRITE: / 'TOTAL VENDOR EXCISE CREATED',    35 tot-ok.
      WRITE: / 'TOTAL VENDOR EXCISE IN ERROR',   35 tot-err.
    ELSE.
      tot-ok = tot-read - tot-err.
      WRITE: / 'TOTAL RECORDS SUCCESS',    35 tot-ok.
      WRITE: / 'TOTAL RECORDS ERROR',   35 tot-err.
    ENDIF.
*&---------------------------------------------------------------------*
*&      Form  100_UPLOAD_FILE
*&---------------------------------------------------------------------*
*       To upload input File
*----------------------------------------------------------------------*
FORM 100_upload_file .
  CALL FUNCTION 'TEXT_CONVERT_XLS_TO_SAP'
    EXPORTING
      i_line_header        = p_hed
      i_tab_raw_data       = it_raw
      i_filename           = p_upl
    TABLES
      i_tab_converted_data = t_indata.
ENDFORM.                    " 100_UPLOAD_FILE
*&---------------------------------------------------------------------*
*&      Form  CREATE_VENDOR_EXCISE
*&---------------------------------------------------------------------*
*Create the vendor's excise details based on the data from the i/pfile.
*----------------------------------------------------------------------*
FORM create_vendor_excise .
  CLEAR: err_msg,
         batch_name,
         t_outdata.
  loop at t_indata.
  PERFORM do_j1id_by_calltran
                     TABLES t_indata
                     USING  p_mode        "Show errors only
                            err_msg
                            batch_name
                            sap_venno.


*perform bdc_transaction using 'J1ID'.
  CALL TRANSACTION 'J1ID' USING bdcdata MODE p_mode MESSAGES INTO messtab.
  IF sy-subrc NE 0.
    zzret_code = sy-subrc.
    IF v_open NE 'X'.
      PERFORM bdc_open_group USING p_sess.
      v_open = 'X'.
    ENDIF.
    PERFORM bdc_insert USING 'J1ID'.
  ELSE.
    zzret_code = 0.
  ENDIF.
  IF zzret_code = 0.
    sap_venno = sy-msgv1.
  ELSE.
    CLEAR sap_venno.
  ENDIF.

  READ TABLE messtab WITH  KEY msgtyp = 'E'.
  IF sy-subrc =  0.
    ADD 1 TO tot-err.
    MOVE-CORRESPONDING t_indata TO t_outdata .
    t_outdata-aedat = sy-datum.
    t_outdata-usnam = sy-uname.
    t_outdata-sort = 'B'.
*Get the Error details
    PERFORM format_message.
    APPEND t_outdata.
  ELSE.
    ADD 1 TO tot-ok.
*Success Message
    MOVE-CORRESPONDING t_indata TO t_outdata.
    t_outdata-aedat = sy-datum.
    t_outdata-usnam = sy-uname.
    t_outdata-sort = 'A'.
    APPEND t_outdata.
  ENDIF.

  IF v_open = 'X'.
      PERFORM bdc_close_group USING p_sess.
    ENDIF.
  REFRESH bdcdata.
  clear : v_open,
          messtab.
  refresh : messtab.
  endloop.
ENDFORM.                    " CREATE_VENDOR_EXCISE
*&---------------------------------------------------------------------*
*&      Form  DO_J1ID_BY_CALLTRAN
*&---------------------------------------------------------------------*
*      Fill the appropriate screens for the transaction and            *
*       Call transaction j1id (vendor excise).                         *
*----------------------------------------------------------------------*
FORM do_j1id_by_calltran  TABLES   p_t_indata STRUCTURE t_indata
                          USING    p_p_mode
                                   p_err_msg
                                   p_batch_name
                                   p_sap_venno.
  PERFORM process_screen_100.
  PERFORM process_screen_110.
ENDFORM.                    " DO_J1ID_BY_CALLTRAN
*&---------------------------------------------------------------------*
*&      Form  PROCESS_SCREEN_100
*&---------------------------------------------------------------------*
*       This is the initial screen of j1id - where vendor excise       *
*       is choosen from various options                                *
*----------------------------------------------------------------------*
FORM process_screen_100 .
  PERFORM bdc_dynpro   USING 'SAPMJ1ID'        '0200'.
  PERFORM bdc_field    USING 'BDC_CURSOR'      'RB6'.
  PERFORM bdc_field    USING 'BDC_OKCODE'      '=EX'.
  PERFORM bdc_field    USING 'RB11'            ''.
  PERFORM bdc_field    USING 'RB6'             'X'.
ENDFORM.                    " PROCESS_SCREEN_100
*&---------------------------------------------------------------------*
*&      Form  PROCESS_SCREEN_110
*&---------------------------------------------------------------------*
*       This is the screen consisting of all details on                *
*       vendor excise maintenance                                     *
*----------------------------------------------------------------------*
FORM process_screen_110 .
  DATA: l_line TYPE i.
  DATA: tabix   LIKE sy-tabix.
  DESCRIBE TABLE t_indata LINES l_line.
  CLEAR : g_date.
    CONCATENATE sy-datum+6(2)
                '.'
                sy-datum+4(2)
                '.'
                sy-datum+0(4)
               INTO g_date.


  PERFORM: bdc_dynpro   USING 'SAPLJ1I0'                 '0800',
           bdc_field    USING 'BDC_CURSOR'               'VIM_POSITION_INFO',
           bdc_field    USING 'BDC_OKCODE'               '=NEWL',
           bdc_dynpro   USING 'SAPLJ1I0'                 '0800',
           bdc_field    USING 'BDC_CURSOR'               'J_1IMOVEND-J_1IPANREF(01)',
           bdc_field    USING 'BDC_OKCODE'               '=SAVE',
           bdc_field    USING 'J_1IMOVEND-LIFNR(01)'      t_indata-lifnr,
           bdc_field    USING 'J_1IMOVEND-J_1IEXCD(01)'   t_indata-j_1iexcd,
           bdc_field    USING 'J_1IMOVEND-J_1IEXRN(01)'   t_indata-J_1IEXRN,
           bdc_field    USING 'J_1IMOVEND-J_1IEXRG(01)'   t_indata-j_1iexrg,
           bdc_field    USING 'J_1IMOVEND-J_1IEXDI(01)'   t_indata-j_1iexdi,
           bdc_field    USING 'J_1IMOVEND-J_1IEXCO(01)'   t_indata-j_1iexco,
           bdc_field    USING 'J_1IMOVEND-J_1ICSTNO(01)'  t_indata-j_1icstno,
           bdc_field    USING 'J_1IMOVEND-J_1ILSTNO(01)'  t_indata-j_1ilstno,
           bdc_field    USING 'J_1IMOVEND-J_1IPANNO(01)'  t_indata-j_1ipanno,
           bdc_field    USING 'J_1IMOVEND-J_1IEXCIVE(01)' t_indata-j_1iexcive,
           bdc_field    USING 'J_1IMOVEND-J_1ISSIST(01)'  t_indata-J_1ISSIST,
           bdc_field    USING 'J_1IMOVEND-J_1IVTYP(01)'   t_indata-J_1IVTYP,
           bdc_field    USING 'J_1IMOVEND-J_1IVENCRE(01)' t_indata-J_1IVENCRE,
           bdc_field    USING 'J_1IMOVEND-AEDAT(01)'      g_date,
           bdc_field    USING 'J_1IMOVEND-USNAM(01)'      sy-uname.

  PERFORM: bdc_dynpro      USING 'SAPLJ1I0'       '0800',
           bdc_field       USING 'BDC_OKCODE'     '=ENDE'.

  PERFORM: bdc_dynpro      USING 'SAPMJ1ID'       '0200',
           bdc_field       USING 'BDC_OKCODE'     '/EEXIT',
           bdc_field       USING 'BDC_CURSOR'     'EXCISE'.

ENDFORM.                    " PROCESS_SCREEN_110
*&---------------------------------------------------------------------*
*&      Form  FORMAT_MESSAGE
*&---------------------------------------------------------------------*
*        Get the Error details
*----------------------------------------------------------------------*
FORM format_message .
  LOOP AT messtab WHERE msgtyp = 'E'.
    CALL FUNCTION 'FORMAT_MESSAGE'
      EXPORTING
        id        = messtab-msgid
        lang      = 'EN'
        no        = messtab-msgnr
        v1        = messtab-msgv1
        v2        = messtab-msgv2
        v3        = messtab-msgv3
        v4        = messtab-msgv4
      IMPORTING
        msg       = g_mess
      EXCEPTIONS
        not_found = 1
        OTHERS    = 2.
    IF sy-subrc <> 0.

    ENDIF.

    CONCATENATE t_outdata-desc
                g_mess
                INTO t_outdata-desc SEPARATED BY space.
  ENDLOOP.
ENDFORM.                    " FORMAT_MESSAGE
*&---------------------------------------------------------------------*
*&      Form  FIELD_VALIDATION
*&---------------------------------------------------------------------*
*       Validate Fields befor uploading
*----------------------------------------------------------------------*
FORM field_validation .
  DATA  v_old_lifnr(10) TYPE n.
  LOOP AT t_indata.
    ADD 1 TO tot-read.
    IF t_indata-altkn CO '1234567890'.
      v_old_lifnr = t_indata-altkn.
      t_indata-altkn = v_old_lifnr.
    ELSE.
      TRANSLATE t_indata-altkn TO UPPER CASE.
    ENDIF.

    SELECT SINGLE lifnr FROM lfb1
                        INTO t_indata-lifnr
                       WHERE altkn = t_indata-altkn.
    IF sy-subrc = 0.
      select single lifnr from J_1IMOvend
                          into J_1IMOvend-lifnr
                         where lifnr = t_indata-lifnr.
      if sy-subrc ne 0.
        MODIFY  t_indata TRANSPORTING LIFNR.
      else.
        ADD 1 TO tot-err.
        MOVE-CORRESPONDING t_indata TO t_outdata.
        t_outdata-aedat = sy-datum.
        t_outdata-usnam = sy-uname.
        t_outdata-desc = 'An entry already exists with the same key'.
        t_outdata-sort = 'B'.
        APPEND t_outdata.
        DELETE t_indata.
        CONTINUE.
      endif.
    ELSE.
      ADD 1 TO tot-err.
      MOVE-CORRESPONDING t_indata TO t_outdata.
      t_outdata-aedat = sy-datum.
      t_outdata-usnam = sy-uname.
      t_outdata-desc = 'Vendor does not exist'.
      t_outdata-sort = 'B'.
      APPEND t_outdata.
      DELETE t_indata.
      CONTINUE.
    ENDIF.
  ENDLOOP.
ENDFORM.                    " FIELD_VALIDATION
*&---------------------------------------------------------------------*
*&      Form  ERROR_DOWNLOAD
*&---------------------------------------------------------------------*
*       To download error file
*----------------------------------------------------------------------*
form ERROR_DOWNLOAD .

endform.                    " ERROR_DOWNLOAD
*&---------------------------------------------------------------------*
*&      Form  SUCCESS_ERROR_DOWNLOAD
*&---------------------------------------------------------------------*
*       Success and Error file Download
*----------------------------------------------------------------------*
form SUCCESS_ERROR_DOWNLOAD .

    SORT t_outdata BY sort.
    READ TABLE t_outdata INDEX 1.
    IF t_outdata-sort = 'A'.
      CLEAR : t_outdata.
      t_outdata-altkn = 'Succ'.
      INSERT t_outdata INTO t_outdata INDEX 1.
    ENDIF.

    READ TABLE t_outdata WITH KEY sort = 'B'.
    IF sy-subrc = 0.
      g_init = sy-tabix.
      CLEAR : t_outdata.
      t_outdata-altkn = 'Erro'.
      INSERT t_outdata INTO t_outdata INDEX g_init.
      g_init = g_init - 1.
*      CLEAR t_err.
      IF g_init IS NOT INITIAL.
        INSERT INITIAL LINE INTO  t_outdata INDEX g_init.
      ENDIF.
    ENDIF.
*Download error and Success files
    PERFORM download_result.
*  ENDIF.
**Success Download
*    PERFORM success_download.
endform.                    " SUCCESS_ERROR_DOWNLOAD
*&---------------------------------------------------------------------*
*&      Form  DOWNLOAD_RESULT
*&---------------------------------------------------------------------*
*       Download error and Success files
*----------------------------------------------------------------------*
form DOWNLOAD_RESULT .
DATA : f_string TYPE string.
  f_string = p_rest.
  PERFORM download_header_line.

  LOOP AT t_outdata.
    MOVE-CORRESPONDING t_outdata TO t_rest.
    IF t_outdata-altkn = 'Erro'.

*      t_rest-s_no  = 'Error'.
      t_rest-altkn = 'Error '.

    ELSEIF t_outdata-altkn = 'Succ'.
*      t_rest-s_no = 'Success'.
      t_rest-altkn = 'Success '.
    ENDIF.
    APPEND t_rest.
  ENDLOOP.

  CALL FUNCTION 'GUI_DOWNLOAD'
    EXPORTING
*    BIN_FILESIZE                    =
      filename                        = f_string
     filetype                        = 'ASC'
*    APPEND                          = ' '
     write_field_separator           = 'X'
    TABLES
      data_tab                        = t_rest[]
*    FIELDNAMES                      =
   EXCEPTIONS
     file_write_error                = 1
     no_batch                        = 2
     gui_refuse_filetransfer         = 3
     invalid_type                    = 4
     no_authority                    = 5
     unknown_error                   = 6
     header_not_allowed              = 7
     separator_not_allowed           = 8
     filesize_not_allowed            = 9
     header_too_long                 = 10
     dp_error_create                 = 11
     dp_error_send                   = 12
     dp_error_write                  = 13
     unknown_dp_error                = 14
     access_denied                   = 15
     dp_out_of_memory                = 16
     disk_full                       = 17
     dp_timeout                      = 18
     file_not_found                  = 19
     dataprovider_exception          = 20
     control_flush_error             = 21
     OTHERS                          = 22
            .
  IF sy-subrc = 0.
     clear t_rest[].
  ENDIF.
endform.                    " DOWNLOAD_RESULT
*&---------------------------------------------------------------------*
*&      Form  DOWNLOAD_HEADER_LINE
*&---------------------------------------------------------------------*
*       Header line for output data
*----------------------------------------------------------------------*
form DOWNLOAD_HEADER_LINE .
*       t_rest-s_no       = 's_no'.
       t_rest-altkn      = 'prev acct no.(BAAN Vendor no.)'.
       t_rest-lifnr      = 'Vendor'.
       t_rest-j_1iexcd   = 'ECC NO'.
       t_rest-J_1IEXRN   = 'Excise Reg No'.
       t_rest-j_1iexrg   = 'Excise Range '.
       t_rest-j_1iexdi   = 'Excise Division'.
       t_rest-j_1iexco   = 'Excise Commissionerate' .
       t_rest-j_1icstno  = 'CST No '.
       t_rest-j_1ilstno  = 'LST No '.
       t_rest-j_1ipanno  = 'PAN No '.
       t_rest-j_1iexcive = 'Excise Tax Indicator for Customer '.
       t_rest-J_1ISSIST  = 'SSI Status'.
       t_rest-J_1IVTYP   = 'Type of Vendor'.
       t_rest-J_1IVENCRE = 'CENVAT'.
       t_rest-aedat      = 'Date'.
       t_rest-usnam      = 'user name'.
       t_rest-desc       = 'Description'.
       INSERT  t_rest INDEX 1.

endform.                    " DOWNLOAD_HEADER_LINE
*&---------------------------------------------------------------------*
*&      Form  TEST_ONLY_RESULT
*&---------------------------------------------------------------------*
*       To move success files to result files on  test only
*----------------------------------------------------------------------*
form TEST_ONLY_RESULT .
    if not t_indata[] is initial.
       LOOP AT t_indata.
           MOVE-CORRESPONDING t_indata to t_outdata.
           t_outdata-aedat = sy-datum.
           t_outdata-usnam = sy-uname.
           t_outdata-sort = 'A'.
           APPEND t_outdata.
       ENDLOOP.
    endif.
endform.                    " TEST_ONLY_RESULT
